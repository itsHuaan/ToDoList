@model ToDoList.Models.Task

@{
    ViewBag.Title = "Edit Task";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container mt-4">
        <h2 class="text-primary mb-4">Edit Task</h2>
        <div class="card shadow-sm">
            <div class="card-body">
                @Html.ValidationSummary(true, "", new
                {
                    @class = "text-danger mb-4"
                })
                @Html.HiddenFor(model => model.Id)

                <div class="mb-3">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new
                    {
                        @class = "form-label"
                    })
                    @Html.EditorFor(model => model.Title, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.Title, "", new
                    {
                        @class = "text-danger"
                    })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new
                    {
                        @class = "form-label"
                    })
                    @Html.EditorFor(model => model.Description, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.Description, "", new
                    {
                        @class = "text-danger"
                    })
                </div>

                <div class="mb-3 form-check">
                    @Html.EditorFor(model => model.IsCompleted, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-check-input"
                        }
                    })
                    @Html.LabelFor(model => model.IsCompleted, htmlAttributes: new
                    {
                        @class = "form-check-label"
                    })
                    @Html.ValidationMessageFor(model => model.IsCompleted, "", new
                    {
                        @class = "text-danger"
                    })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new
                    {
                        @class = "form-label"
                    })
                    @Html.EditorFor(model => model.CreatedAt, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.CreatedAt, "", new
                    {
                        @class = "text-danger"
                    })
                </div>

                <div class="mb-3">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a class="btn btn-secondary" href="@Url.Action("Index")">Back to List</a>
                </div>
            </div>
        </div>
    </div>
}

<br />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
